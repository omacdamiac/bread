@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();
$my-accent-color: (
  50: #FAF6FF,
  100: #EBDAFF,
  200: #DCBEFF,
  300: #CDA3FF,
  400: #B98CED,
  500: #9D71CF,
  600: #8359B2,
  700: #6A4495,
  800: #523178,
  900: #3C215B,
  contrast: (
    50: #3C215B,
    100: #523178,
    200: #6A4495,
    300: #8359B2,
    400: #9D71CF,
    500: #B98CED,
    600: #CDA3FF,
    700: #fff,
    800: #EBDAFF,
    900: #FAF6FF,
  ),
);
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($my-accent-color, 700, 500, 50);
$candy-app-accent: mat-palette($my-accent-color, 50);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme(
  $candy-app-primary,
  $candy-app-accent,
  $candy-app-warn
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
